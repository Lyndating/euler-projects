# The four adjacent digits in the 1000-digit indexber that have the greatest product are 9 × 9 × 8 × 9 = 5832.

thousand_digit = '73167176531330624919225119674426574742355349194934969835203127745063262395783180169848018694788518438586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557668966489504452445231617318564030987111217223831136222989342338030813533627661428280644448664523874930358907296290915604407723907138105158593079608670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622488397224137565705605749026140797296865241453510047482166370484403199890008895243450658541227588666881164271714799244429282308634656748139191231628245861786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408071984038509624554443629812309878799272442849091888458015616609791913387549920052406368991256071760605886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450'

# Find the thirteen adjacent digits in the 1000-digit indexber that have the greatest product. What is the value of this product?
def productOfArray (arr)
    arr.inject{|value, num| value * num} 
end

product  = 0
numsArray = thousand_digit.chars.map{|cha| cha.to_i}
(0..(thousand_digit.length - 13)).each do |index|
    if productOfArray(numsArray[index..(index+12)]) > product
        product = productOfArray(numsArray[index..(index+12)])
    end
end 
puts product